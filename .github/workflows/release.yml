name: Create Release

on:
  push:
    branches:
      - main
      - master

jobs:
  build:
    uses: holzi1005/test-workflow/.github/workflows/artifact.yml@main

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: paulhatch/semantic-version@v5.0.2
        id: version
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          change_path: .
          version_format: "${major}.${minor}.${patch}"

      - name: Create new Release with semantic-version tag
        uses: actions/create-release@master
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: Release ${{ steps.version.outputs.version }}
          tag_name: v${{ steps.version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.token }}

      - uses: actions/download-artifact@v3
        with:
          name: jitsi-admin_${{github.run_number}}
          path: jitsi-admin_${{github.run_number}}

      - uses: montudor/action-zip@v1
        with:
          args: unzip -qq jitsi-admin_${{github.run_number}}/jitsi-admin_${{github.run_number}}.zip -d release


      - name: Write semantic Version in .env.local
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "laF_version=2.0.0-dev"
          replace: "laF_version=${{ steps.version.outputs.version }}"
          regex: false
          include: "release/.env.local"

      - name: Archive Release Application
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          directory: release
          exclusions: '*.git* *.github* *.gitlab* /*node_modules/* .editorconfig /*nodejs/*' 

      - name: Archive Release Websocket
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          directory: release/nodejs

      - name: Upload Websocket Asset to Release
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/nodejs/release.zip
          asset_name: websocket.zip
          asset_content_type: application/zip

      - name: Upload Application Asset to Release
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/release.zip
          asset_name: application.zip
          asset_content_type: application/zip
