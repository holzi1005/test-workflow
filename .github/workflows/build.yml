name: Build Pipeline


on: push


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Write Version
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "laF_version=2.0.0-dev"
          replace: "laF_version=GITHUB.${{github.run_number}}"
          regex: false
          include: ".env.local"
      - name: Install PHP Dependencies
        uses: php-actions/composer@v6
        with:
          php_version: "8.0"
          php_extensions: ldap xsl zip
      - name: Install NPM Packages
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Build the Application JS ans CSS
        run: |
          npm install
          npm run build

      - name: Build Websocket
        working-directory: nodejs/
        run: npm install

      - name: Clean up Build
        run: |
          sudo chown -R $USER:$USER ./var
          rm -rf ./var
          rm -rf ./node_modules
          rm -rf ./.github
          rm -rf ./.git

      - name: Move Env Variable
        run: cp ./.env.sample ./.env.local

      - name: zip Application
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r jitsi-admin.zip .

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: jitsi_admin_GITHUB_CI_${{github.run_number}}
          path: jitsi-admin.zip

      - name: Upload Artifact Websocket
        uses: actions/upload-artifact@v3
        with:
          name: JA_websocket_GITHUB_CI_${{github.run_number}}
          path: nodejs/

  create_release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.1.1
        with:
          name: JA_websocket_GITHUB_CI_${{github.run_number}}
  
      - name: Zip Release
        uses: TheDoctor0/zip-release@0.7.1
        with:
          filename: release.zip

      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: Version_{{github.run_number}}
          tag_name: release_{{github.run_number}}
          body_path: README.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/azblogfilter.windows-amd64.zip
          asset_name: azblogfilter.windows-amd64.zip
          asset_content_type: application/zip
